% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getGRegionsStat-methods.R
\name{getGRegionsStat-methods}
\alias{getGRegionsStat-methods}
\alias{getGRegionsStat}
\title{Statistic of Genomic Regions}
\usage{
getGRegionsStat(
  GR,
  win.size = 350,
  step.size = 350,
  grfeatures = NULL,
  stat = c("sum", "mean", "gmean", "median", "density", "count", "denCount"),
  absolute = FALSE,
  select.strand = NULL,
  column = 1L,
  prob = FALSE,
  entropy = FALSE,
  maxgap = -1L,
  minoverlap = 0L,
  scaling = 1000L,
  logbase = 2,
  missings = 0,
  type = c("any", "start", "end", "within", "equal"),
  ignore.strand = FALSE,
  na.rm = TRUE,
  naming = FALSE,
  output = c("hits", "all"),
  num.cores = 1L,
  tasks = 0,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{GR}{A GRange object or a list of GRanges object with the variable of 
interest in the GRanges metacolumn.}

\item{win.size}{An integer for the size of the windows/regions size of the
intervals of genomics regions.}

\item{step.size}{Interval at which the regions/windows must be defined}

\item{grfeatures}{A GRanges object corresponding to an annotated genomic
feature. For example, gene region, transposable elements, exons,
intergenic region, etc. If provided, then parameters 'win.size' and
step.size are ignored and the statistics are estimated for 'grfeatures'.}

\item{stat}{Statistic used to estimate the summarized value of the variable
of interest in each interval/window. Posible options are: "mean",
geometric mean ("gmean"), "median", "density", "count", "denCount" and
"sum" (default). Here, we define "density" as the sum of values from the
variable of interest in the given region devided by the length of the
region. The option 'count' compute the number/count of positions in the
specified regions with values greater than zero in the selected 'column'.
The statistic "denCount" is defined as the "count" in the given region 
devided by the length of the region.}

\item{absolute}{Optional. Logic (default: FALSE). Whether to use the absolute
values of the variable provided. For example, the difference of
methylation levels could take negative values (TV) and we would be
interested on the sum of abs(TV), which is sum of the total variation
distance.}

\item{select.strand}{Optional. If provided,"+" or "-", then the summarized
statistic is computed only for the specified DNA chain.}

\item{column}{Integer number denoting the column where the variable of
interest is located in the metacolumn of the GRanges object.}

\item{prob}{Logic. If TRUE and the variable of interest has values between
zero and 1, then the summarized statistic is comuputed using Fisher's
transformation.}

\item{entropy}{Logic. Whether to compute the entropy when prob == TRUE.}

\item{maxgap, minoverlap, type}{See ?findOverlaps in the IRanges package for a
description of these arguments.}

\item{scaling}{integer (default 1). Scaling factor to be used when
stat = "density". For example, if scaling = 1000, then density * scaling
denotes the sum of values in 1000 bp.}

\item{logbase}{A positive number: the base with respect to which logarithms
are computed when parameter 'entropy = TRUE' (default: logbase = 2).}

\item{missings}{Whether to write '0' or 'NA' on regions where there is not
data to compute the statistic.}

\item{ignore.strand}{When set to TRUE, the strand information is ignored in
the overlap calculations.}

\item{na.rm}{Logical value. If TRUE, the NA values will be removed}

\item{naming}{Logical value. If TRUE, the rows GRanges object will be 
given the names(GR). Default is FALSE.}

\item{output}{A string. Setting output = "all" will return all the regions
given in 'grfeatures'. Default is output = "hits".}

\item{num.cores, tasks}{Paramaters for parallele computation using package
\code{\link[BiocParallel]{BiocParallel-package}}: the number of cores to
use, i.e. at most how many child processes will be run simultaneously
(see \code{\link[BiocParallel]{bplapply}} and the number of tasks per job
(only for Linux OS).}

\item{verbose}{Logical. Default is TRUE. If TRUE, then the progress of the
computational tasks is given.}

\item{maxgap, minoverlap, type, select, ignore.strand}{Used to find overlapped 
regions. See \code{\link[IRanges]{findOverlaps-methods}} in the 
\strong{IRanges} package for a description of these arguments.}
}
\value{
An object of the same class of \emph{GR} with the new genomic regions
    and their corresponding summarized statistic.
}
\description{
A function to estimate summarized measures of a specified
    variable given in a GRanges object (a column from the metacolums of the
    GRanges object) after split the GRanges object into intervals. A faster
    alternative would be \code{\link{getGRegionsStat2}}.
}
\details{
This function split a Grange object into intervals genomic regions
    (GR) of fixed size (as given in function "tileMethylCounts2" R package
    methylKit, with small changes). A summarized statistic (mean, median,
    geometric mean or sum) is calculated for the specified variable values
    from each region. Notice that if win.size == step.size, then
    non-overlapping windows are obtained.
}
\examples{
library(GenomicRanges)
gr <- GRanges(seqnames = Rle( c("chr1", "chr2", "chr3", "chr4"),
            c(5, 5, 5, 5)),
            ranges = IRanges(start = 1:20, end = 1:20),
            strand = rep(c("+", "-"), 10),
            GC = seq(1, 0, length = 20))
grs <- getGRegionsStat(gr, win.size = 4, step.size = 4)
grs

## Selecting the positive strand
grs <- getGRegionsStat(gr, win.size = 4, step.size = 4, select.strand = "+")
grs

## Selecting the negative strand
grs <- getGRegionsStat(gr, win.size = 4, step.size = 4, select.strand = "-")
grs

## Operating over a list of GRanges objects
gr2 <- GRanges(seqnames = Rle( c("chr1", "chr2", "chr3", "chr4"),
                            c(5, 5, 5, 5)),
                ranges = IRanges(start = 1:20, end = 1:20),
                strand = rep(c("+", "-"), 10),
                GC = runif(20))

grs <- getGRegionsStat(list(gr1 = gr, gr2 = gr2), win.size = 4, step.size=4)
}
\seealso{
\code{\link{getGRegionsStat2}}.
}
\author{
Robersy Sanchez (\url{https://github.com/genomaths}).
}
